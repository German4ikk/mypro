// Telegram Bot Integration
class TelegramIntegration {
    constructor(botToken, chatId) {
        this.botToken = botToken;
        this.chatId = chatId;
        this.apiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    async sendMessage(message) {
        try {
            console.log('[TelegramIntegration] –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram');
            console.log('[TelegramIntegration] API URL:', this.apiUrl);
            console.log('[TelegramIntegration] Chat ID:', this.chatId);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∏ chat_id —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
            if (!this.botToken || !this.chatId) {
                console.error('[TelegramIntegration] –û—à–∏–±–∫–∞: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ ID —á–∞—Ç–∞');
                return false;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–∫—Å–∏
            if (window.telegramProxy) {
                console.log('[TelegramIntegration] –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS');
                
                // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
                const success = await window.telegramProxy.sendMessageViaProxy(
                    this.botToken, 
                    this.chatId, 
                    message
                );
                
                return success;
            }
            
            // –ï—Å–ª–∏ –ø—Ä–æ–∫—Å–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π —Å–ø–æ—Å–æ–±
            console.log('[TelegramIntegration] –ü—Ä–æ–∫—Å–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å');
            
            // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            const requestData = {
                chat_id: this.chatId,
                text: message,
                parse_mode: 'HTML'
            };
            
            console.log('[TelegramIntegration] –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...');
            
            const response = await fetch(this.apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestData)
            });

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
            if (!response.ok) {
                console.error(`[TelegramIntegration] –û—à–∏–±–∫–∞ HTTP: ${response.status} ${response.statusText}`);
                const errorText = await response.text();
                console.error('[TelegramIntegration] –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', errorText);
                return false;
            }

            const data = await response.json();
            console.log('[TelegramIntegration] –û—Ç–≤–µ—Ç –æ—Ç Telegram API:', data);
            return data.ok;
        } catch (error) {
            console.error('[TelegramIntegration] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error);
            return false;
        }
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
    formatRequestMessage(formData) {
        return `
<b>üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç!</b>

<b>üë§ –ò–º—è:</b> ${formData.name}
<b>üì± –¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}
<b>üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:</b> 
${formData.message}

<i>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞-–≤–∏–∑–∏—Ç–∫–∏ –≤ ${new Date().toLocaleString()}</i>
        `;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
if (typeof module !== 'undefined') {
    module.exports = TelegramIntegration;
}
